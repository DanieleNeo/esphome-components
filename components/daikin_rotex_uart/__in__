import esphome.codegen as cg
import esphome.config_validation as cv
from esphome.const import *
from esphome.cpp_generator import MockObj
from esphome.components.uart import UARTComponent

DEPENDENCIES = []

AUTO_LOAD = ['binary_sensor', 'button', 'number', 'sensor', 'select', 'text', 'text_sensor']

daikin_rotex_uart_ns = cg.esphome_ns.namespace('daikin_rotex_uart')
DaikinRotexUARTComponent = daikin_rotex_uart_ns.class_('DaikinRotexUARTComponent', cg.Component)

CONF_UART_ID = "uart_id"

CONFIG_SCHEMA = cv.Schema(
    {
        cv.GenerateID(): cv.declare_id(DaikinRotexUARTComponent),
        cv.Required(CONF_UART_ID): cv.use_id(UARTComponent),
    }
)

async def to_code(config):
    global_ns = MockObj("", "")

    var = cg.new_Pvariable(config[CONF_ID])
    await cg.register_component(var, config)

    if CONF_UART_ID in config:
        #cg.add_define("USE_CANBUS")
        uart = await cg.get_variable(config[CONF_UART_ID])
        cg.add(var.set_uart(uart))
